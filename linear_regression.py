# -*- coding: utf-8 -*-
"""5th Meeting: Linear Regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BqjA7NKQ7avofSiSBAtLJVdsX-kiQOMI

SIMPLE LINEAR REGRESSION
"""

#Step 1: Import packages and classes
import numpy as np
from sklearn.linear_model import LinearRegression

#Provide data
x = np.array([5, 15, 25, 35, 45, 55]).reshape((-1, 1))
y = np.array([5, 20, 14, 32, 22, 38])

x

y

#Step 3: Create a model and fit it
model = LinearRegression()
model.fit(x, y)

model = LinearRegression().fit(x, y)

#Step 4: Get results
r_sq = model.score(x, y)
print(f"coefficient of determination: {r_sq}")

print(f"intercept: {model.intercept_}")
print(f"slope: {model.coef_}")

new_model = LinearRegression().fit(x, y.reshape((-1, 1)))
print(f"intercept: {new_model.intercept_}")
print(f"slope: {new_model.coef_}")

#Step 5: Predict response
y_pred = model.predict(x)
print(f"predicted response:\n{y_pred}")

#as manual
y_predmanual = model.intercept_ + model.coef_ * x
print(f"predicted response:\n{y_predmanual}")

x_new = np.arange(5).reshape((-1, 1))
x_new
y_new = model.predict(x_new)
y_new

import pandas as pd
y_new = model.predict(pd.DataFrame(np.array([2.5])))
y_new

y_pred

import matplotlib.pyplot as plt
x = np.array([5, 15, 25, 35, 45, 55])
y = np.array([5, 20, 14, 32, 22, 38])
plt.scatter(x,y)
plt.plot(x,np.array(y_pred),'r')
plt.show



"""MULTIPLE LINEAR REGRESSION"""

#Steps 1 and 2: Import packages and classes, and provide data
import numpy as np
from sklearn.linear_model import LinearRegression

x = [[0, 1], [5, 1], [15, 2], [25, 5], [35, 11], [45, 15], [55, 34], [60, 35]]
y = [4, 5, 20, 14, 32, 22, 38, 43]
x, y = np.array(x), np.array(y)

x

y

#Step 3: Create a model and fit it
model = LinearRegression().fit(x, y)

#Step 4: Get results
r_sq = model.score(x, y)
print(f"coefficient of determination: {r_sq}")
print(f"intercept: {model.intercept_}")
print(f"coefficients: {model.coef_}")

#y=b0+b1X1+b2X2=5.5226+0.4471X1+0.2550X2

#Step 5: Predict response
y_pred = model.predict(x)
print(f"predicted response:\n{y_pred}")

#as manual
y_predmanual = model.intercept_ + np.sum(model.coef_ * x, axis=1)
print(f"predicted response:\n{y_predmanual}")

x_new = np.arange(10).reshape((-1, 2))
x_new
y_new = model.predict(x_new)
y_new

x_new

"""APPLICATION OF THE REAL DATASET"""

#Import Data
import pandas as pd
from google.colab import drive
drive.mount('/content/drive')
mydatasource = pd.read_excel("/content/drive/My Drive/Introduction of Artiifcial Intelligence (Math UNAND)/5th Meeting: 2022, November 15th/IHK.xlsx") #from GDrive

mydatasource

mydata=mydatasource.iloc[0:9,:]
mydata

mydata.columns

x=mydata.loc[:,["KURS","INFLASI"]]
x

x=mydata.iloc[:,1:3]
x

y=mydata.loc[:,["IHK"]]
y

#Step 3: Create a model and fit it
from sklearn.linear_model import LinearRegression
model = LinearRegression().fit(x, y)

#Step 4: Get results
r_sq = model.score(x, y)
print(f"coefficient of determination: {r_sq}")
print(f"intercept: {model.intercept_}")
print(f"coefficients: {model.coef_}")

#Model
#Y=b0+b1X1+b2X2=102.53522399+2.31624015e-04X1+1.17950258e+00X2

#Step 5: Predict response
y_pred = model.predict(x)
print(f"predicted response:\n{y_pred}")

#as manual
y_predmanual = model.intercept_ + np.sum(model.coef_ * x, axis=1)
print(f"predicted response:\n{y_predmanual}")

#October 31. 2022	
#kurs:15430.591935	
#inflasi:5.71	
#ihk:112.75
x_new = pd.DataFrame(np.array([[15430.591935,5.71]]), columns=("KURS","INFLASI"))
x_new

y_new = model.predict(x_new)
y_new

x_NOVEMBER = pd.DataFrame(np.array([[15500,5.00]]), columns=("KURS","INFLASI"))
x_NOVEMBER

y_NOVEMBER=model.predict(x_NOVEMBER)
y_NOVEMBER